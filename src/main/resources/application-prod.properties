app.version=@project.version@
# timestamp of the package
app.build.timestamp=@maven.build.timestamp@

server.port=8080
spring.application.name=@project.artifactId@
spring.application.description=@project.description@

file.processing.executor.threads=20
# intervalo em que os frames serao obtidos
file.processing.frame.interval=7

# RabbitMQ
spring.rabbitmq.exchange=app
spring.rabbitmq.host=${MESSAGE_QUEUE_HOST}
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
rabbitmq.queue.consumer.messageQueue=frame-extractor
rabbitmq.queue.producer.messageQueue=uploadS3


# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

logging.level.root=INFO

aws.region=${AWS_REGION}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME}


# --- Management / Actuator ---
management.endpoints.web.exposure.include=prometheus,health,metrics
management.endpoint.prometheus.enabled=true

# --- OpenTelemetry ---
#otel.metrics.exporter=prometheus
#otel.traces.exporter=otlp
#otel.logs.exporter=otlp
#prometheus.server.port=9464

# --- OTLP Exporter endpoint (OTel Collector) ---
otel.exporter.otlp.endpoint=http://${OTEL_COLLECTOR_HOST}:4317
otel.exporter.otlp.protocol=grpc